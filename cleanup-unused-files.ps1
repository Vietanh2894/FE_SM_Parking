# SCRIPT X√ìA C√ÅC FILE KH√îNG S·ª¨ D·ª§NG
# Ch·∫°y script n√†y trong PowerShell v·ªõi quy·ªÅn admin

Write-Host "üóëÔ∏è B·∫ÆT ƒê·∫¶U X√ìA C√ÅC FILE KH√îNG S·ª¨ D·ª§NG..." -ForegroundColor Yellow

# Danh s√°ch c√°c file backup/old kh√¥ng s·ª≠ d·ª•ng
$filesToDelete = @(
    "src\pages\DangKyThangPage_backup.jsx",
    "src\pages\DashboardPage.jsx.backup", 
    "src\pages\UserDashboardPage_Old.jsx",
    "src\pages\DashboardPage_new.jsx",
    "src\pages\VehicleTypePage_New.jsx",
    "src\components\modals\AddRoleModal_New.jsx",
    "src\components\modals\AddStaffModal_New.jsx", 
    "src\components\modals\AddAccountModal_New.jsx",
    "src\components\modals\EditStaffModal_New.jsx",
    "src\components\modals\EditAccountModal_New.jsx",
    "src\components\modals\EditParkingLotModal_New.jsx",
    "src\components\modals\EditParkingLotModal_Old.jsx",
    "src\components\examples\ResponsivePageExample.jsx",
    "src\components\common\DashboardNavigation.jsx",
    "src\components\index.js",
    "src\services\index.js",
    "src\types\index.js",
    "UNIFIED_LOGIN_CHANGES.js"
)

$deletedCount = 0
$notFoundCount = 0

foreach ($file in $filesToDelete) {
    if (Test-Path $file) {
        try {
            Remove-Item $file -Force
            Write-Host "‚úÖ ƒê√£ x√≥a: $file" -ForegroundColor Green
            $deletedCount++
        }
        catch {
            Write-Host "‚ùå L·ªói khi x√≥a: $file - $($_.Exception.Message)" -ForegroundColor Red
        }
    }
    else {
        Write-Host "‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y: $file" -ForegroundColor Yellow
        $notFoundCount++
    }
}

Write-Host "`nüìä T·ªîNG K·∫æT:" -ForegroundColor Cyan
Write-Host "‚úÖ ƒê√£ x√≥a: $deletedCount files" -ForegroundColor Green
Write-Host "‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y: $notFoundCount files" -ForegroundColor Yellow

# X√≥a c√°c th∆∞ m·ª•c tr·ªëng
Write-Host "`nüóÇÔ∏è Ki·ªÉm tra v√† x√≥a th∆∞ m·ª•c tr·ªëng..." -ForegroundColor Yellow

$emptyDirs = @(
    "src\components\examples"
)

foreach ($dir in $emptyDirs) {
    if (Test-Path $dir) {
        $items = Get-ChildItem $dir -Force
        if ($items.Count -eq 0) {
            try {
                Remove-Item $dir -Force
                Write-Host "‚úÖ ƒê√£ x√≥a th∆∞ m·ª•c tr·ªëng: $dir" -ForegroundColor Green
            }
            catch {
                Write-Host "‚ùå L·ªói khi x√≥a th∆∞ m·ª•c: $dir - $($_.Exception.Message)" -ForegroundColor Red
            }
        }
        else {
            Write-Host "‚ö†Ô∏è Th∆∞ m·ª•c kh√¥ng tr·ªëng: $dir" -ForegroundColor Yellow
        }
    }
}

Write-Host "`nüéâ HO√ÄN TH√ÄNH!" -ForegroundColor Green
Write-Host "Khuy·∫øn ngh·ªã: Ch·∫°y 'npm run build' ƒë·ªÉ ki·ªÉm tra kh√¥ng c√≥ l·ªói import n√†o" -ForegroundColor Cyan

# Pause ƒë·ªÉ xem k·∫øt qu·∫£
Read-Host "`nNh·∫•n Enter ƒë·ªÉ tho√°t..."